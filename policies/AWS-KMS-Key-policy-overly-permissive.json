{
  "policyUpi": "PC-AWS-KMS-649",
  "policyId": "2b68ad79-4c8b-48dd-8459-2d86203e862b",
  "policyType": "config",
  "cloudType": "aws",
  "severity": "high",
  "name": "AWS KMS Key policy overly permissive",
  "description": "This policy identifies KMS Keys that have a key policy overly permissive. Key policies are the primary way to control access to customer master keys (CMKs) in AWS KMS. It is recommended to follow the principle of least privilege ensuring that KMS key policy does not have all the permissions to be able to complete a malicious action.\n\nFor more details:\nhttps://docs.aws.amazon.com/kms/latest/developerguide/control-access-overview.html#overview-policy-elements",
  "rule.criteria": "1867d4c1-87ed-4ed1-a11e-f88a1ca9ead7",
  "searchModel.query": "config from cloud.resource where cloud.type = 'aws' AND api.name = 'aws-kms-get-key-rotation-status' AND json.rule = keyMetadata.keyState equals Enabled and policies.default.Statement[?any(Principal.AWS equals * and Condition does not exist)] exists",
  "recommendation": "1. Log in to the AWS console\n2. In the console, select the specific region from region drop-down on the top right corner, for which the alert is generated\n3. Navigate to Key Management Service (KMS)\n4. Click on 'Customer managed keys' (Left Panel)\n5. Select reported KMS Customer managed key\n6. Click on the 'Key policy' tab\n7. Click on 'Edit',\nReplace the 'Everyone' grantee (i.e. '*') from the Principal element value with an AWS account ID or an AWS account ARN.\nOR\nAdd a Condition clause to the existing policy statement so that the KMS key is restricted.\n8. Click on 'Save Changes'",
  "remediable": false,
  "remediation.cliScriptTemplate": "",
  "remediation.description": "",
  "remediation.impact": "",
  "compliance.standard": [
    "CSA CCM v.4.0.1",
    "HITRUST v.9.4.2",
    "NIST CSF",
    "NIST SP 800-171 Revision 2",
    "NIST SP 800-172",
    "PCI DSS v3.2.1"
  ]
}